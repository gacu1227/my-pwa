if(!self.define){let t,e={};const s=(s,n)=>(s=new URL(s+".js",n).href,e[s]||new Promise((e=>{if("document"in self){const t=document.createElement("script");t.src=s,t.onload=e,document.head.appendChild(t)}else t=s,importScripts(s),e()})).then((()=>{let t=e[s];if(!t)throw new Error(`Module ${s} didnâ€™t register its module`);return t})));self.define=(n,i)=>{const a=t||("document"in self?document.currentScript.src:"")||location.href;if(e[a])return;let r={};const c=t=>s(t,a),o={module:{uri:a},exports:r,require:c};e[a]=Promise.all(n.map((t=>o[t]||c(t)))).then((t=>(i(...t),r)))}}define([],(function(){"use strict";try{self["workbox:core:6.5.4"]&&_()}catch(t){}const t=(t,...e)=>{let s=t;return e.length>0&&(s+=` :: ${JSON.stringify(e)}`),s};class e extends Error{constructor(e,s){super(t(e,s)),this.name=e,this.details=s}}try{self["workbox:routing:6.5.4"]&&_()}catch(t){}const s=t=>t&&"object"==typeof t?t:{handle:t};class n{constructor(t,e,n="GET"){this.handler=s(e),this.match=t,this.method=n}setCatchHandler(t){this.catchHandler=s(t)}}class i extends n{constructor(t,e,s){super((({url:e})=>{const s=t.exec(e.href);if(s&&(e.origin===location.origin||0===s.index))return s.slice(1)}),e,s)}}class a{constructor(){this.t=new Map,this.i=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",(t=>{const{request:e}=t,s=this.handleRequest({request:e,event:t});s&&t.respondWith(s)}))}addCacheListener(){self.addEventListener("message",(t=>{if(t.data&&"CACHE_URLS"===t.data.type){const{payload:e}=t.data,s=Promise.all(e.urlsToCache.map((e=>{"string"==typeof e&&(e=[e]);const s=new Request(...e);return this.handleRequest({request:s,event:t})})));t.waitUntil(s),t.ports&&t.ports[0]&&s.then((()=>t.ports[0].postMessage(!0)))}}))}handleRequest({request:t,event:e}){const s=new URL(t.url,location.href);if(!s.protocol.startsWith("http"))return;const n=s.origin===location.origin,{params:i,route:a}=this.findMatchingRoute({event:e,request:t,sameOrigin:n,url:s});let r=a&&a.handler;const c=t.method;if(!r&&this.i.has(c)&&(r=this.i.get(c)),!r)return;let o;try{o=r.handle({url:s,request:t,event:e,params:i})}catch(t){o=Promise.reject(t)}const h=a&&a.catchHandler;return o instanceof Promise&&(this.o||h)&&(o=o.catch((async n=>{if(h)try{return await h.handle({url:s,request:t,event:e,params:i})}catch(t){t instanceof Error&&(n=t)}if(this.o)return this.o.handle({url:s,request:t,event:e});throw n}))),o}findMatchingRoute({url:t,sameOrigin:e,request:s,event:n}){const i=this.t.get(s.method)||[];for(const a of i){let i;const r=a.match({url:t,sameOrigin:e,request:s,event:n});if(r)return i=r,(Array.isArray(i)&&0===i.length||r.constructor===Object&&0===Object.keys(r).length||"boolean"==typeof r)&&(i=void 0),{route:a,params:i}}return{}}setDefaultHandler(t,e="GET"){this.i.set(e,s(t))}setCatchHandler(t){this.o=s(t)}registerRoute(t){this.t.has(t.method)||this.t.set(t.method,[]),this.t.get(t.method).push(t)}unregisterRoute(t){if(!this.t.has(t.method))throw new e("unregister-route-but-not-found-with-method",{method:t.method});const s=this.t.get(t.method).indexOf(t);if(!(s>-1))throw new e("unregister-route-route-not-registered");this.t.get(t.method).splice(s,1)}}let r;const c={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},o=t=>[c.prefix,t,c.suffix].filter((t=>t&&t.length>0)).join("-"),h=t=>t||o(c.precache),u=t=>t||o(c.runtime);function l(t,e){const s=e();return t.waitUntil(s),s}try{self["workbox:precaching:6.5.4"]&&_()}catch(t){}function f(t){if(!t)throw new e("add-to-cache-list-unexpected-type",{entry:t});if("string"==typeof t){const e=new URL(t,location.href);return{cacheKey:e.href,url:e.href}}const{revision:s,url:n}=t;if(!n)throw new e("add-to-cache-list-unexpected-type",{entry:t});if(!s){const t=new URL(n,location.href);return{cacheKey:t.href,url:t.href}}const i=new URL(n,location.href),a=new URL(n,location.href);return i.searchParams.set("__WB_REVISION__",s),{cacheKey:i.href,url:a.href}}class d{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:t,state:e})=>{e&&(e.originalRequest=t)},this.cachedResponseWillBeUsed=async({event:t,state:e,cachedResponse:s})=>{if("install"===t.type&&e&&e.originalRequest&&e.originalRequest instanceof Request){const t=e.originalRequest.url;s?this.notUpdatedURLs.push(t):this.updatedURLs.push(t)}return s}}}class w{constructor({precacheController:t}){this.cacheKeyWillBeUsed=async({request:t,params:e})=>{const s=(null==e?void 0:e.cacheKey)||this.h.getCacheKeyForURL(t.url);return s?new Request(s,{headers:t.headers}):t},this.h=t}}let p;async function b(t,s){let n=null;if(t.url){n=new URL(t.url).origin}if(n!==self.location.origin)throw new e("cross-origin-copy-response",{origin:n});const i=t.clone(),a={headers:new Headers(i.headers),status:i.status,statusText:i.statusText},r=s?s(a):a,c=function(){if(void 0===p){const t=new Response("");if("body"in t)try{new Response(t.body),p=!0}catch(t){p=!1}p=!1}return p}()?i.body:await i.blob();return new Response(c,r)}function y(t,e){const s=new URL(t);for(const t of e)s.searchParams.delete(t);return s.href}class g{constructor(){this.promise=new Promise(((t,e)=>{this.resolve=t,this.reject=e}))}}const v=new Set;try{self["workbox:strategies:6.5.4"]&&_()}catch(t){}function m(t){return"string"==typeof t?new Request(t):t}class R{constructor(t,e){this.u={},Object.assign(this,e),this.event=e.event,this.l=t,this.p=new g,this.v=[],this.m=[...t.plugins],this.R=new Map;for(const t of this.m)this.R.set(t,{});this.event.waitUntil(this.p.promise)}async fetch(t){const{event:s}=this;let n=m(t);if("navigate"===n.mode&&s instanceof FetchEvent&&s.preloadResponse){const t=await s.preloadResponse;if(t)return t}const i=this.hasCallback("fetchDidFail")?n.clone():null;try{for(const t of this.iterateCallbacks("requestWillFetch"))n=await t({request:n.clone(),event:s})}catch(t){if(t instanceof Error)throw new e("plugin-error-request-will-fetch",{thrownErrorMessage:t.message})}const a=n.clone();try{let t;t=await fetch(n,"navigate"===n.mode?void 0:this.l.fetchOptions);for(const e of this.iterateCallbacks("fetchDidSucceed"))t=await e({event:s,request:a,response:t});return t}catch(t){throw i&&await this.runCallbacks("fetchDidFail",{error:t,event:s,originalRequest:i.clone(),request:a.clone()}),t}}async fetchAndCachePut(t){const e=await this.fetch(t),s=e.clone();return this.waitUntil(this.cachePut(t,s)),e}async cacheMatch(t){const e=m(t);let s;const{cacheName:n,matchOptions:i}=this.l,a=await this.getCacheKey(e,"read"),r=Object.assign(Object.assign({},i),{cacheName:n});s=await caches.match(a,r);for(const t of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await t({cacheName:n,matchOptions:i,cachedResponse:s,request:a,event:this.event})||void 0;return s}async cachePut(t,s){const n=m(t);var i;await(i=0,new Promise((t=>setTimeout(t,i))));const a=await this.getCacheKey(n,"write");if(!s)throw new e("cache-put-with-no-response",{url:(r=a.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this.l,u=await self.caches.open(o),l=this.hasCallback("cacheDidUpdate"),f=l?await async function(t,e,s,n){const i=y(e.url,s);if(e.url===i)return t.match(e,n);const a=Object.assign(Object.assign({},n),{ignoreSearch:!0}),r=await t.keys(e,a);for(const e of r)if(i===y(e.url,s))return t.match(e,n)}(u,a.clone(),["__WB_REVISION__"],h):null;try{await u.put(a,l?c.clone():c)}catch(t){if(t instanceof Error)throw"QuotaExceededError"===t.name&&await async function(){for(const t of v)await t()}(),t}for(const t of this.iterateCallbacks("cacheDidUpdate"))await t({cacheName:o,oldResponse:f,newResponse:c.clone(),request:a,event:this.event});return!0}async getCacheKey(t,e){const s=`${t.url} | ${e}`;if(!this.u[s]){let n=t;for(const t of this.iterateCallbacks("cacheKeyWillBeUsed"))n=m(await t({mode:e,request:n,event:this.event,params:this.params}));this.u[s]=n}return this.u[s]}hasCallback(t){for(const e of this.l.plugins)if(t in e)return!0;return!1}async runCallbacks(t,e){for(const s of this.iterateCallbacks(t))await s(e)}*iterateCallbacks(t){for(const e of this.l.plugins)if("function"==typeof e[t]){const s=this.R.get(e),n=n=>{const i=Object.assign(Object.assign({},n),{state:s});return e[t](i)};yield n}}waitUntil(t){return this.v.push(t),t}async doneWaiting(){let t;for(;t=this.v.shift();)await t}destroy(){this.p.resolve(null)}async _(t){let e=t,s=!1;for(const t of this.iterateCallbacks("cacheWillUpdate"))if(e=await t({request:this.request,response:e,event:this.event})||void 0,s=!0,!e)break;return s||e&&200!==e.status&&(e=void 0),e}}class x{constructor(t={}){this.cacheName=u(t.cacheName),this.plugins=t.plugins||[],this.fetchOptions=t.fetchOptions,this.matchOptions=t.matchOptions}handle(t){const[e]=this.handleAll(t);return e}handleAll(t){t instanceof FetchEvent&&(t={event:t,request:t.request});const e=t.event,s="string"==typeof t.request?new Request(t.request):t.request,n="params"in t?t.params:void 0,i=new R(this,{event:e,request:s,params:n}),a=this.q(i,s,e);return[a,this.U(a,i,s,e)]}async q(t,s,n){let i;await t.runCallbacks("handlerWillStart",{event:n,request:s});try{if(i=await this.j(s,t),!i||"error"===i.type)throw new e("no-response",{url:s.url})}catch(e){if(e instanceof Error)for(const a of t.iterateCallbacks("handlerDidError"))if(i=await a({error:e,event:n,request:s}),i)break;if(!i)throw e}for(const e of t.iterateCallbacks("handlerWillRespond"))i=await e({event:n,request:s,response:i});return i}async U(t,e,s,n){let i,a;try{i=await t}catch(a){}try{await e.runCallbacks("handlerDidRespond",{event:n,request:s,response:i}),await e.doneWaiting()}catch(t){t instanceof Error&&(a=t)}if(await e.runCallbacks("handlerDidComplete",{event:n,request:s,response:i,error:a}),e.destroy(),a)throw a}}class q extends x{constructor(t={}){t.cacheName=h(t.cacheName),super(t),this.k=!1!==t.fallbackToNetwork,this.plugins.push(q.copyRedirectedCacheableResponsesPlugin)}async j(t,e){const s=await e.cacheMatch(t);return s||(e.event&&"install"===e.event.type?await this.L(t,e):await this.O(t,e))}async O(t,s){let n;const i=s.params||{};if(!this.k)throw new e("missing-precache-entry",{cacheName:this.cacheName,url:t.url});{const e=i.integrity,a=t.integrity,r=!a||a===e;n=await s.fetch(new Request(t,{integrity:"no-cors"!==t.mode?a||e:void 0})),e&&r&&"no-cors"!==t.mode&&(this.C(),await s.cachePut(t,n.clone()))}return n}async L(t,s){this.C();const n=await s.fetch(t);if(!await s.cachePut(t,n.clone()))throw new e("bad-precaching-response",{url:t.url,status:n.status});return n}C(){let t=null,e=0;for(const[s,n]of this.plugins.entries())n!==q.copyRedirectedCacheableResponsesPlugin&&(n===q.defaultPrecacheCacheabilityPlugin&&(t=s),n.cacheWillUpdate&&e++);0===e?this.plugins.push(q.defaultPrecacheCacheabilityPlugin):e>1&&null!==t&&this.plugins.splice(t,1)}}q.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:t})=>!t||t.status>=400?null:t},q.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:t})=>t.redirected?await b(t):t};class U{constructor({cacheName:t,plugins:e=[],fallbackToNetwork:s=!0}={}){this.N=new Map,this.T=new Map,this.M=new Map,this.l=new q({cacheName:h(t),plugins:[...e,new w({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this.l}precache(t){this.addToCacheList(t),this.P||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this.P=!0)}addToCacheList(t){const s=[];for(const n of t){"string"==typeof n?s.push(n):n&&void 0===n.revision&&s.push(n.url);const{cacheKey:t,url:i}=f(n),a="string"!=typeof n&&n.revision?"reload":"default";if(this.N.has(i)&&this.N.get(i)!==t)throw new e("add-to-cache-list-conflicting-entries",{firstEntry:this.N.get(i),secondEntry:t});if("string"!=typeof n&&n.integrity){if(this.M.has(t)&&this.M.get(t)!==n.integrity)throw new e("add-to-cache-list-conflicting-integrities",{url:i});this.M.set(t,n.integrity)}if(this.N.set(i,t),this.T.set(i,a),s.length>0){const t=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(t)}}}install(t){return l(t,(async()=>{const e=new d;this.strategy.plugins.push(e);for(const[e,s]of this.N){const n=this.M.get(s),i=this.T.get(e),a=new Request(e,{integrity:n,cache:i,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:a,event:t}))}const{updatedURLs:s,notUpdatedURLs:n}=e;return{updatedURLs:s,notUpdatedURLs:n}}))}activate(t){return l(t,(async()=>{const t=await self.caches.open(this.strategy.cacheName),e=await t.keys(),s=new Set(this.N.values()),n=[];for(const i of e)s.has(i.url)||(await t.delete(i),n.push(i.url));return{deletedURLs:n}}))}getURLsToCacheKeys(){return this.N}getCachedURLs(){return[...this.N.keys()]}getCacheKeyForURL(t){const e=new URL(t,location.href);return this.N.get(e.href)}getIntegrityForCacheKey(t){return this.M.get(t)}async matchPrecache(t){const e=t instanceof Request?t.url:t,s=this.getCacheKeyForURL(e);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(t){const s=this.getCacheKeyForURL(t);if(!s)throw new e("non-precached-url",{url:t});return e=>(e.request=new Request(t),e.params=Object.assign({cacheKey:s},e.params),this.strategy.handle(e))}}let j;const k=()=>(j||(j=new U),j);class L extends n{constructor(t,e){super((({request:s})=>{const n=t.getURLsToCacheKeys();for(const i of function*(t,{ignoreURLParametersMatching:e=[/^utm_/,/^fbclid$/],directoryIndex:s="index.html",cleanURLs:n=!0,urlManipulation:i}={}){const a=new URL(t,location.href);a.hash="",yield a.href;const r=function(t,e=[]){for(const s of[...t.searchParams.keys()])e.some((t=>t.test(s)))&&t.searchParams.delete(s);return t}(a,e);if(yield r.href,s&&r.pathname.endsWith("/")){const t=new URL(r.href);t.pathname+=s,yield t.href}if(n){const t=new URL(r.href);t.pathname+=".html",yield t.href}if(i){const t=i({url:a});for(const e of t)yield e.href}}(s.url,e)){const e=n.get(i);if(e){return{cacheKey:e,integrity:t.getIntegrityForCacheKey(e)}}}}),t.strategy)}}function O(t){const s=k();!function(t,s,c){let o;if("string"==typeof t){const e=new URL(t,location.href);o=new n((({url:t})=>t.href===e.href),s,c)}else if(t instanceof RegExp)o=new i(t,s,c);else if("function"==typeof t)o=new n(t,s,c);else{if(!(t instanceof n))throw new e("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});o=t}(r||(r=new a,r.addFetchListener(),r.addCacheListener()),r).registerRoute(o)}(new L(s,t))}var E;self.addEventListener("message",(t=>{t.data&&"SKIP_WAITING"===t.data.type&&self.skipWaiting()})),E={},function(t){k().precache(t)}([{url:"_next/static/8zFY4sxZTO-7Ogi3Ynwod/_buildManifest.js",revision:"3cb3546e0839618f89182d553ad99c11"},{url:"_next/static/8zFY4sxZTO-7Ogi3Ynwod/_ssgManifest.js",revision:"b404e23d62d95bafd03ad7747cc0e88b"},{url:"_next/static/chunks/4bd1b696-b54c66733e4d5abb.js",revision:"134c96f899922d29279b675e9fbee451"},{url:"_next/static/chunks/517-809e949c14d8d468.js",revision:"831eb0c00f8ad6b1a4d74807883a11ec"},{url:"_next/static/chunks/app/_not-found/page-0cb240f37ead8c1c.js",revision:"11428d238858bca6b3edb53af90a013f"},{url:"_next/static/chunks/app/no-pwa/layout-b4d1987adf840197.js",revision:"778dca7523d96e1d765014f24cad6c1d"},{url:"_next/static/chunks/app/no-pwa/page-025ae9584be5752a.js",revision:"778dca7523d96e1d765014f24cad6c1d"},{url:"_next/static/chunks/app/pwa/(all)/layout-92c6ca0fc37d7129.js",revision:"778dca7523d96e1d765014f24cad6c1d"},{url:"_next/static/chunks/app/pwa/(all)/login/page-f0a6b7c47748e3b7.js",revision:"b130de90fe296324dadb9b042d9bb31c"},{url:"_next/static/chunks/app/pwa/(authenticated)/fuga/page-a9e1599989b36d23.js",revision:"560c4459738e897b966daa73b98e88fb"},{url:"_next/static/chunks/app/pwa/(authenticated)/hoge/page-49195d236e186eb7.js",revision:"a4fb43995e6dc816e6f8316b0d275ddf"},{url:"_next/static/chunks/app/pwa/(authenticated)/layout-fc6daf0ef34dd076.js",revision:"778dca7523d96e1d765014f24cad6c1d"},{url:"_next/static/chunks/framework-6b27c2b7aa38af2d.js",revision:"cd4061b5adde896bf2cde6c57e3098a9"},{url:"_next/static/chunks/main-app-8299980e215f3d1e.js",revision:"4edd70c58782e9122bdf8bf58f6109ff"},{url:"_next/static/chunks/main-d52683256d47b799.js",revision:"64701494da8969122a085ba95bcc3e83"},{url:"_next/static/chunks/pages/_app-d23763e3e6c904ff.js",revision:"7c192283bc380e9c048b969bc2e1dde2"},{url:"_next/static/chunks/pages/_error-9b7125ad1a1e68fa.js",revision:"dd01894f4bc1c8941a6cc87715d59ce3"},{url:"_next/static/chunks/polyfills-42372ed130431b0a.js",revision:"846118c33b2c0e922d7b3a7676f81f6f"},{url:"_next/static/chunks/webpack-7026d6ce30956577.js",revision:"c21114a5d9a3feb53ed6715bfd2c2fee"},{url:"404.html",revision:"ca5bb763184a8f87099e2c6c6f2a8731"},{url:"404/index.html",revision:"ca5bb763184a8f87099e2c6c6f2a8731"},{url:"favicon.ico",revision:"fce1bfa670644bba2908857d117f7899"},{url:"icons/icon-180.png",revision:"05266079fb426d6ac45b478b91d56173"},{url:"icons/icon-192.png",revision:"28f16c450353b8f03429d5db132e6fdd"},{url:"icons/icon-512.png",revision:"5a2ca31310fc8ec9fa5d3028b3cb3ab1"},{url:"no-pwa/index.html",revision:"ef43d9d3b2215dd5e2410a9e700f0ff5"},{url:"pwa/fuga/index.html",revision:"4248d7a2afccd460a85296df4d918db9"},{url:"pwa/hoge/index.html",revision:"26e1987bff8326301a8aa91babaddd62"},{url:"pwa/login/index.html",revision:"b22be559c5cbe0a4f9a6d8cadaeb1691"},{url:"sw.js",revision:"62c8b61a3d25b063b5df8f7c593591ad"}]),O(E)}));
//# sourceMappingURL=workbox-sw.js.map
